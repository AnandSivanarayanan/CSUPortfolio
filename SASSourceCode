/* Compute axis ranges */
proc means data=WORK.IMPORT noprint;
	class Customer_Age Marital_Status / order=data;
	var Total_Trans_Amt Months_on_book;
	output out=_BarLine_(where=(_type_ > 2)) mean(Total_Trans_Amt 
		Months_on_book)=resp1 resp2;
run;

/* Compute response min and max values (include 0 in computations) */
data _null_;
	retain respmin 0 respmax 0;
	retain respmin1 0 respmax1 0 respmin2 0 respmax2 0;
	set _BarLine_ end=last;
	respmin1=min(respmin1, resp1);
	respmin2=min(respmin2, resp2);
	respmax1=max(respmax1, resp1);
	respmax2=max(respmax2, resp2);

	if last then
		do;
			call symputx ("respmin1", respmin1);
			call symputx ("respmax1", respmax1);
			call symputx ("respmin2", respmin2);
			call symputx ("respmax2", respmax2);
			call symputx ("respmin", min(respmin1, respmin2));
			call symputx ("respmax", max(respmax1, respmax2));
		end;
run;

/* Define a macro for offset */
%macro offset ();
	%if %sysevalf(&respmin eq 0) %then
		%do;
			offsetmin=0 %end;

	%if %sysevalf(&respmax eq 0) %then
		%do;
			offsetmax=0 %end;
%mend offset;

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.IMPORT nocycleattrs;
	vbar Customer_Age / response=Total_Trans_Amt group=Marital_Status 
		groupdisplay=cluster stat=mean;
	vline Customer_Age / response=Months_on_book group=Marital_Status stat=mean 
		y2axis;
	yaxis grid min=&respmin1 max=&respmax1 %offset();
	y2axis min=&respmin2 max=&respmax2 %offset();
	keylegend / location=outside;
run;

ods graphics / reset;

proc datasets library=WORK noprint;
	delete _BarLine_;
	run;
	
	
	ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.IMPORT;
	histogram Months_on_book /;
	yaxis grid;
run;

ods graphics / reset;


ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.IMPORT;
	scatter x=Customer_Age y=Months_on_book /;
	xaxis grid;
	yaxis grid;
run;

ods graphics / reset;

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.IMPORT;
	scatter x=Gender y=Months_on_book /;
	xaxis grid;
	yaxis grid;
run;

ods graphics / reset;

ods graphics / reset width=6.4in height=4.8in imagemap;

proc sgplot data=WORK.IMPORT;
	scatter x=Education_Level y=Months_on_book /;
	xaxis grid;
	yaxis grid;
run;

ods graphics / reset;

ods noproctitle;
ods graphics / imagemap=on;

proc means data=WORK.IMPORT chartype mean std min max median n nmiss stderr var 
		mode range sum vardef=df clm alpha=0.05 cv skewness qmethod=os;
	var CLIENTNUM Customer_Age Dependent_count Months_on_book 
		Total_Relationship_Count Months_Inactive_12_mon Contacts_Count_12_mon 
		Credit_Limit Total_Revolving_Bal Avg_Open_To_Buy Total_Amt_Chng_Q4_Q1 
		Total_Trans_Amt Total_Trans_Ct Total_Ct_Chng_Q4_Q1 Avg_Utilization_Ratio 
		Naive_Bayes_Classifier_Attritio VAR23;
run;

proc univariate data=WORK.IMPORT vardef=df noprint;
	var CLIENTNUM Customer_Age Dependent_count Months_on_book 
		Total_Relationship_Count Months_Inactive_12_mon Contacts_Count_12_mon 
		Credit_Limit Total_Revolving_Bal Avg_Open_To_Buy Total_Amt_Chng_Q4_Q1 
		Total_Trans_Amt Total_Trans_Ct Total_Ct_Chng_Q4_Q1 Avg_Utilization_Ratio 
		Naive_Bayes_Classifier_Attritio VAR23;
	histogram CLIENTNUM Customer_Age Dependent_count Months_on_book 
		Total_Relationship_Count Months_Inactive_12_mon Contacts_Count_12_mon 
		Credit_Limit Total_Revolving_Bal Avg_Open_To_Buy Total_Amt_Chng_Q4_Q1 
		Total_Trans_Amt Total_Trans_Ct Total_Ct_Chng_Q4_Q1 Avg_Utilization_Ratio 
		Naive_Bayes_Classifier_Attritio VAR23 / normal(noprint) kernel;
	inset mean std min max median n nmiss stderr var mode range sum cv skewness / 
		position=nw;
run;

/* Graph template to construct combination histogram/boxplot */
proc template;
	define statgraph histobox;
		dynamic AVAR ByVarInfo;
		begingraph;
		entrytitle "Distribution of " AVAR ByVarInfo;
		layout lattice / rows=2 columndatarange=union rowgutter=0 rowweights=(0.75 
			0.25);
		layout overlay / yaxisopts=(offsetmax=0.1) xaxisopts=(display=none);
		histogram AVAR /;
		endlayout;
		layout overlay /;
		BoxPlot Y=AVAR / orient=horizontal;
		endlayout;
		endlayout;
		endgraph;
	end;
run;

/* Macro to subset data and create a histobox for every by group */
%macro byGroupHistobox(data=, level=, num_level=, byVars=, num_byvars=, avar=);
	%do j=1 %to &num_byvars;
		%let varName&j=%scan(%str(&byVars), &j);
	%end;

	%do i=1 %to &num_level;

		/* Get group variable values */
		data _null_;
			i=&i;
			set &level point=i;

			%do j=1 %to &num_byvars;
				call symputx("x&j", strip(&&varName&j), 'l');
			%end;
			stop;
		run;

		/* Build proc sql where clause */
        %let dsid=%sysfunc(open(&data));
		%let whereClause=;

		%do j=1 %to %eval(&num_byvars-1);
			%let varnum=%sysfunc(varnum(&dsid, &&varName&j));

			%if(%sysfunc(vartype(&dsid, &varnum))=C) %then
				%let whereClause=&whereClause.&&varName&j.="&&x&j"%str( and );
			%else
				%let whereClause=&whereClause.&&varName&j.=&&x&j.%str( and );
		%end;
		%let varnum=%sysfunc(varnum(&dsid, &&varName&num_byvars));

		%if(%sysfunc(vartype(&dsid, &varnum))=C) %then
			%let whereClause=&whereClause.&&varName&num_byvars.="&&x&num_byvars";
		%else
			%let whereClause=&whereClause.&&varName&num_byvars.=&&x&num_byvars;
		%let rc=%sysfunc(close(&dsid));

		/* Subset the data set */
		proc sql noprint;
			create table WORK.tempData as select * from &data
            where &whereClause;
		quit;

		/* Build plot group info */
        %let groupInfo=;

		%do j=1 %to %eval(&num_byvars-1);
			%let groupInfo=&groupInfo.&&varName&j.=&&x&j%str( );
		%end;
		%let groupInfo=&groupInfo.&&varName&num_byvars.=&&x&num_byvars;

		/* Create histogram/boxplot combo plot */
		proc sgrender data=WORK.tempData template=histobox;
			dynamic AVAR="&avar" ByVarInfo=" (&groupInfo)";
		run;

	%end;
%mend;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="CLIENTNUM" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Customer_Age" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Dependent_count" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Months_on_book" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Total_Relationship_Count" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Months_Inactive_12_mon" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Contacts_Count_12_mon" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Credit_Limit" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Total_Revolving_Bal" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Avg_Open_To_Buy" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Total_Amt_Chng_Q4_Q1" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Total_Trans_Amt" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Total_Trans_Ct" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Total_Ct_Chng_Q4_Q1" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Avg_Utilization_Ratio" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="Naive_Bayes_Classifier_Attritio" ByVarInfo="";
run;

proc sgrender data=WORK.IMPORT template=histobox;
	dynamic AVAR="VAR23" ByVarInfo="";
run;

proc datasets library=WORK noprint;
	delete tempData;
	run;
	
	
	ods noproctitle;
ods graphics / imagemap=on;

/* Exploring Data */
proc univariate data=WORK.IMPORT;
	ods select Histogram;
	var CLIENTNUM Customer_Age Dependent_count Months_on_book 
		Total_Relationship_Count Months_Inactive_12_mon Contacts_Count_12_mon 
		Credit_Limit Total_Revolving_Bal Avg_Open_To_Buy Total_Amt_Chng_Q4_Q1 
		Total_Trans_Amt Total_Trans_Ct Total_Ct_Chng_Q4_Q1 Avg_Utilization_Ratio 
		Naive_Bayes_Classifier_Attritio VAR23;
	histogram CLIENTNUM Customer_Age Dependent_count Months_on_book 
		Total_Relationship_Count Months_Inactive_12_mon Contacts_Count_12_mon 
		Credit_Limit Total_Revolving_Bal Avg_Open_To_Buy Total_Amt_Chng_Q4_Q1 
		Total_Trans_Amt Total_Trans_Ct Total_Ct_Chng_Q4_Q1 Avg_Utilization_Ratio 
		Naive_Bayes_Classifier_Attritio VAR23 / normal kernel;
	inset n mean median std var skewness kurtosis / position=ne;
run;

proc univariate data=WORK.IMPORT normal;
	ods select Histogram GoodnessOfFit ProbPlot QQPlot;
	var CLIENTNUM Customer_Age Dependent_count Months_on_book 
		Total_Relationship_Count Months_Inactive_12_mon Contacts_Count_12_mon 
		Credit_Limit Total_Revolving_Bal Avg_Open_To_Buy Total_Amt_Chng_Q4_Q1 
		Total_Trans_Amt Total_Trans_Ct Total_Ct_Chng_Q4_Q1 Avg_Utilization_Ratio 
		Naive_Bayes_Classifier_Attritio VAR23;

	/* Checking for Normality */
	histogram CLIENTNUM Customer_Age Dependent_count Months_on_book 
		Total_Relationship_Count Months_Inactive_12_mon Contacts_Count_12_mon 
		Credit_Limit Total_Revolving_Bal Avg_Open_To_Buy Total_Amt_Chng_Q4_Q1 
		Total_Trans_Amt Total_Trans_Ct Total_Ct_Chng_Q4_Q1 Avg_Utilization_Ratio 
		Naive_Bayes_Classifier_Attritio VAR23 / normal(mu=est sigma=est);
	inset normaltest pnormal mean median std var skewness kurtosis n / position=ne;
	probplot CLIENTNUM Customer_Age Dependent_count Months_on_book 
		Total_Relationship_Count Months_Inactive_12_mon Contacts_Count_12_mon 
		Credit_Limit Total_Revolving_Bal Avg_Open_To_Buy Total_Amt_Chng_Q4_Q1 
		Total_Trans_Amt Total_Trans_Ct Total_Ct_Chng_Q4_Q1 Avg_Utilization_Ratio 
		Naive_Bayes_Classifier_Attritio VAR23 / normal(mu=est sigma=est);
	inset normaltest pnormal mean median std var skewness kurtosis n / position=nw;
	qqplot CLIENTNUM Customer_Age Dependent_count Months_on_book 
		Total_Relationship_Count Months_Inactive_12_mon Contacts_Count_12_mon 
		Credit_Limit Total_Revolving_Bal Avg_Open_To_Buy Total_Amt_Chng_Q4_Q1 
		Total_Trans_Amt Total_Trans_Ct Total_Ct_Chng_Q4_Q1 Avg_Utilization_Ratio 
		Naive_Bayes_Classifier_Attritio VAR23 / normal(mu=est sigma=est);
	inset normaltest pnormal mean median std var skewness kurtosis n / position=nw;
run;



ods noproctitle;
ods graphics / imagemap=on;

proc corr data=WORK.IMPORT pearson nosimple noprob plots=matrix(histogram);
	var Months_on_book;
	with Customer_Age Credit_Limit Total_Trans_Amt;
run;


ods noproctitle;
ods graphics / imagemap=on;

data Work._Paired_diffs_;
	set WORK.IMPORT;
	_Difference_=Months_on_book - Customer_Age;
	label _Difference_="Difference: Months_on_book - Customer_Age";
run;

/* Test for normality */
proc univariate data=Work._Paired_diffs_ normal mu0=0;
	ods select TestsForNormality;
	var _Difference_;
run;

/* t test */
proc ttest data=WORK.IMPORT sides=2 h0=0 plots(showh0);
	paired Months_on_book*Customer_Age;
run;

/* Clean up */
proc delete data=work._paired_diffs_;
run;


Title;
ods noproctitle;
ods graphics / imagemap=on;

proc glm data=WORK.IMPORT;
	class Customer_Age;
	model Months_on_book=Customer_Age;
	means Customer_Age / hovtest=levene welch plots=none;
	lsmeans Customer_Age / adjust=tukey pdiff alpha=.05;
	run;
quit;

Title;
ods noproctitle;
ods graphics / imagemap=on;

proc glm data=WORK.IMPORT;
	class Marital_Status;
	model Months_on_book=Marital_Status;
	means Marital_Status / hovtest=levene welch plots=none;
	lsmeans Marital_Status / adjust=tukey pdiff alpha=.05;
	run;
quit;

Title;
ods noproctitle;
ods graphics / imagemap=on;

proc glm data=WORK.IMPORT;
	class Income_Category;
	model Months_on_book=Income_Category;
	means Income_Category / hovtest=levene welch plots=none;
	lsmeans Income_Category / adjust=tukey pdiff alpha=.05;
	run;
quit;


title;
ods noproctitle;
ods graphics / imagemap=on;

proc glm data=WORK.IMPORT;
	class Customer_Age;
	model Months_on_book=Customer_Age Total_Trans_Amt Total_Trans_Amt * 
		Customer_Age;
	lsmeans Customer_Age / adjust=tukey pdiff alpha=.05;
quit;

title;
ods noproctitle;
ods graphics / imagemap=on;

proc glm data=WORK.IMPORT;
	class Education_Level;
	model Months_on_book=Education_Level Total_Trans_Amt Total_Trans_Amt * 
		Education_Level;
	lsmeans Education_Level / adjust=tukey pdiff alpha=.05;
quit;


ods noproctitle;
ods graphics / imagemap=on;

proc logistic data=WORK.IMPORT;
	class Customer_Age Education_Level Marital_Status Income_Category 
		Card_Category / param=glm;
	model Months_on_book / Total_Relationship_Count=Customer_Age Education_Level 
		Marital_Status Income_Category Card_Category Total_Trans_Amt / link=logit 
		selection=forward slentry=0.05 hierarchy=single offset=Total_Trans_Ct 
		technique=fisher;
run;



ods noproctitle;
ods graphics / imagemap=on;

proc glmselect data=WORK.IMPORT plots=(criterionpanel);
	class Customer_Age Education_Level Marital_Status Income_Category 
		Card_Category / param=glm;
	model Months_on_book=Customer_Age Education_Level Marital_Status 
		Income_Category Card_Category Total_Trans_Amt / selection=stepwise
(select=sbc) hierarchy=single;
run;
